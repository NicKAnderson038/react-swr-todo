{"version":3,"sources":["constant.js","service/index.js","components/Home.js","components/AddComment.js","components/User.js","App.js","reportWebVitals.js","index.js"],"names":["API","baseRoute","postRequest","values","store","a","notOptomisticApi","mutate","axios","post","trigger","deleteRequest","filter","c","id","delete","StyledTableCell","withStyles","theme","head","backgroundColor","color","palette","common","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","useStyles","makeStyles","link","textDecoration","text","fontFamily","fontWeight","Home","commentsFromServer","data","useSWR","initialData","classes","Box","marginTop","TableContainer","component","Paper","Table","aria-label","TableHead","className","align","TableBody","map","row","to","isUndefined","scope","CircularProgress","size","comment","Button","variant","startIcon","onClick","v4","getInitialProps","ctx","res","json","AddComment","length","initialValues","onSubmit","formikHelpers","loremIpsum","count","format","paragraphLowerBound","paragraphUpperBound","random","Math","sentenceLowerBound","sentenceUpperBound","suffix","units","resetForm","FormGroup","autoComplete","as","TextField","name","label","type","justifyContent","display","card","minWidth","maxWidth","large","width","height","loader","User","d","pop","Fab","style","Card","CardContent","Avatar","src","Typography","gutterBottom","defaults","baseURL","createMuiTheme","primary","main","error","red","A400","background","default","App","ThemeProvider","CssBaseline","value","fetcher","url","then","r","Container","path","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d9730f9.chunk.js","sourcesContent":["export const API =\n  process.env.NODE_ENV === 'development' ? '/comments' : '/db.json'\n\nexport const baseRoute =\n  process.env.NODE_ENV === 'development' ? '/' : '/react-swr-todo/'\n\nexport const AXIOS_BASE_URL =\n  process.env.NODE_ENV === 'development'\n    ? 'http://localhost:4001'\n    : 'https://raw.githubusercontent.com/NicKAnderson038/react-swr-todo/gh-pages'\n","import axios from 'axios'\nimport { mutate, trigger } from 'swr'\nimport { API } from '../constant'\n\nexport async function postRequest(values, store, notOptomisticApi = false) {\n  mutate(API, [...store, values], notOptomisticApi)\n  await axios.post(API, values)\n  trigger(API)\n}\n\nexport async function deleteRequest(values, store, notOptomisticApi = false) {\n  mutate(\n    API,\n    store.filter((c) => c.id !== values),\n    notOptomisticApi\n  )\n  await axios.delete(`${API}/` + values)\n  trigger(API)\n}\n","import {\n  Box,\n  Button,\n  CircularProgress,\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  withStyles,\n} from '@material-ui/core'\nimport { Link } from 'wouter'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport { isUndefined } from 'lodash'\nimport axios from 'axios'\nimport React from 'react'\nimport { v4 } from 'uuid'\nimport useSWR from 'swr'\nimport { API, baseRoute } from '../constant'\nimport { deleteRequest } from '../service'\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: '#555454',\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell)\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n    '&:hover, &:focus': {\n      backgroundColor: '#5b67f37d',\n    },\n  },\n}))(TableRow)\n\n// text-decoration: none;\nconst useStyles = makeStyles({\n  link: {\n    textDecoration: 'none',\n  },\n  text: {\n    fontFamily: 'bungee',\n    fontWeight: 300,\n  },\n})\n\nconst Home = ({ commentsFromServer }) => {\n  const { data } = useSWR(API, { initialData: commentsFromServer })\n  const classes = useStyles()\n\n  return (\n    <Box marginTop={2}>\n      <TableContainer component={Paper}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <StyledTableRow>\n              <StyledTableCell className={classes.text}>Id</StyledTableCell>\n              <StyledTableCell className={classes.text}>\n                Comment\n              </StyledTableCell>\n              <StyledTableCell className={classes.text} align=\"right\">\n                Actions\n              </StyledTableCell>\n            </StyledTableRow>\n          </TableHead>\n          <TableBody>\n            {data?.map((row) => (\n              <StyledTableRow key={v4()}>\n                <Link\n                  className={classes.link}\n                  to={isUndefined(row.id) ? baseRoute : `${baseRoute}user/${row.id}`}\n                >\n                  <StyledTableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    className={classes.text}\n                  >\n                    {isUndefined(row.id) && <CircularProgress size={15} />}\n                    {row.id}\n                  </StyledTableCell>\n                </Link>\n                <Link\n                  className={classes.link}\n                  to={isUndefined(row.id) ? baseRoute : `${baseRoute}user/${row.id}`}\n                >\n                  <StyledTableCell className={classes.text}>\n                    {row.comment}\n                  </StyledTableCell>\n                </Link>\n                <StyledTableCell align=\"right\">\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    className={classes.text}\n                    startIcon={<DeleteIcon />}\n                    onClick={async () => {\n                      await deleteRequest(row.id, data)\n                    }}\n                  >\n                  {/* <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    className={classes.text}\n                    startIcon={<DeleteIcon />}\n                    onClick={async () => {\n                      const deleteUrl = '/comments/' + row.id\n                      const url = '/comments'\n                      mutate(\n                        url,\n                        data.filter((c) => c.id !== row.id),\n                        false\n                      )\n                      await axios.delete(deleteUrl)\n                      trigger(url)\n                    }}\n                  > */}\n                    Delete\n                  </Button>\n                </StyledTableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  )\n}\n\nHome.getInitialProps = async (ctx) => {\n  const res = await axios('/comments')\n  const json = res.data\n  return { commentsFromServer: json }\n}\n\nexport default Home\n","import {\n  Box,\n  Button,\n  FormGroup,\n  TextField,\n  makeStyles,\n} from '@material-ui/core'\nimport { Field, Form, Formik } from 'formik'\nimport { loremIpsum } from 'lorem-ipsum'\nimport React from 'react'\nimport useSWR from 'swr'\nimport { API } from '../constant'\nimport { postRequest } from '../service'\n\nconst useStyles = makeStyles({\n  text: {\n    fontFamily: 'bungee',\n  },\n})\n\nconst lorem = () =>\n  loremIpsum({\n    count: 1, // Number of \"words\", \"sentences\", or \"paragraphs\"\n    format: 'plain', // \"plain\" or \"html\"\n    paragraphLowerBound: 3, // Min. number of sentences per paragraph.\n    paragraphUpperBound: 7, // Max. number of sentences per paragarph.\n    random: Math.random, // A PRNG function\n    sentenceLowerBound: 5, // Min. number of words per sentence.\n    sentenceUpperBound: 10, // Max. number of words per sentence.\n    suffix: '\\n', // Line ending, defaults to \"\\n\" or \"\\r\\n\" (win32)\n    units: 'sentences', // paragraph(s), \"sentence(s)\", or \"word(s)\"\n  })\n\nexport function AddComment() {\n  const { data } = useSWR(API)\n  const classes = useStyles()\n\n  return (\n    <Box marginTop={2}>\n      <div>\n        <span className={classes.text}>Number Of Comments: {data?.length}</span>\n        <Formik\n          initialValues={{ comment: '' }}\n          onSubmit={async (values, formikHelpers) => {\n            values.body = lorem()\n            await postRequest(values, data)\n            formikHelpers.resetForm()\n          }}\n        >\n        {/* <Formik\n          initialValues={{ comment: '' }}\n          onSubmit={async (values, formikHelpers) => {\n            values.body = lorem()\n            mutate(API, [...data, values], false)\n            await axios.post(API, values)\n            trigger(API)\n            formikHelpers.resetForm()\n          }}\n        > */}\n          <Form>\n            <FormGroup>\n              <Field\n                autoComplete=\"off\"\n                as={TextField}\n                name=\"comment\"\n                label=\"Comment\"\n              />\n            </FormGroup>\n\n            <Box marginTop={1}>\n              <Button\n                className={classes.text}\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n              >\n                Add Comment\n              </Button>\n            </Box>\n          </Form>\n        </Formik>\n      </div>\n    </Box>\n  )\n}\n\nexport default AddComment\n","import {\n  Avatar,\n  Card,\n  CardContent,\n  CircularProgress,\n  Fab,\n  makeStyles,\n  Typography,\n} from '@material-ui/core'\nimport { Link } from 'wouter'\nimport { isUndefined } from 'lodash'\nimport HomeIcon from '@material-ui/icons/Home'\nimport React from 'react'\nimport useSWR from 'swr'\nimport { API, baseRoute } from '../constant'\n\nconst useStyles = makeStyles({\n  root: {\n    justifyContent: 'center',\n    display: 'grid',\n  },\n  card: {\n    minWidth: 400,\n    maxWidth: 600,\n  },\n  text: {\n    fontFamily: 'bungee',\n  },\n  large: {\n    width: '60px',\n    height: '60px',\n  },\n  link: {\n    textDecoration: 'none',\n  },\n  loader: {\n      display: 'inline'\n  }\n})\n\nexport function User({ id }) {\n  const { data } = useSWR(API)\n  const classes = useStyles()\n  const res = data?.filter((d) => `${d.id}` === id).pop()\n\n  return (\n    <div className={classes.root}>\n      <br />\n      <Fab color=\"primary\" aria-label=\"Add\">\n        <Link to={baseRoute}>\n          {' '}\n          <HomeIcon style={{ color: 'white' }} />\n        </Link>\n      </Fab>\n      <br />\n      <br />\n      <Card className={classes.card}>\n        {isUndefined(res) ? (\n          <CardContent>\n            <CircularProgress className={classes.loader} size={100} />\n          </CardContent>\n        ) : (\n          <>\n            <CardContent>\n              <Avatar\n                className={classes.large}\n                src={`https://i.pravatar.cc/150?img=${id}`}\n              ></Avatar>\n            </CardContent>\n\n            <CardContent>\n              <Typography\n                className={classes.text}\n                color=\"textPrimary\"\n                gutterBottom\n              >\n                {`${res.id}: ${res.comment}`}\n              </Typography>\n            </CardContent>\n            <CardContent>\n              <Typography\n                className={classes.text}\n                color=\"textSecondary\"\n                gutterBottom\n              >\n                {res.body}\n              </Typography>\n            </CardContent>\n          </>\n        )}\n      </Card>\n    </div>\n  )\n}\n\nexport default User\n","import { Route, Switch } from 'wouter'\nimport { Container, CssBaseline } from '@material-ui/core'\nimport red from '@material-ui/core/colors/red'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport axios from 'axios'\nimport { SWRConfig } from 'swr'\nimport Home from './components/Home'\nimport AddComment from './components/AddComment'\nimport User from './components/User'\nimport { AXIOS_BASE_URL, baseRoute } from './constant'\nimport './App.css'\n\naxios.defaults.baseURL = AXIOS_BASE_URL\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: 'beige',\n    },\n  },\n})\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <SWRConfig value={{ fetcher: (url) => axios(url).then((r) => r.data) }}>\n        <Container maxWidth={false}>\n          <Switch>\n            <Route path={baseRoute}>\n              <AddComment />\n              <Home />\n            </Route>\n            <Route path={`${baseRoute}user/:id`}>\n              {(params) => <User id={params.id} />}\n            </Route>\n            <Route>404, Not Found!</Route>\n          </Switch>\n        </Container>\n      </SWRConfig>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}